#category("Hints")
#name("Zone Hints")
#description("Lupo's maps give information about the number of important items in the current zone. Lupo in Glades sells the hints for Woods and Glades.")

!tags("Zone Hints")

!config(skill_hints, "Lupo reveals the amount of skills in an area", Boolean, true)
!config(teleporter_hints, "Lupo reveals the amount of teleporters in an area", Boolean, true)

!include("progress_helper")
!on_event("progress_helper", write_progress_message, {
    set_integer("zone", fetch(player.currentArea))
    write_hints()
})
!on_event("progress_helper", write_map_progress_message, {
    set_integer("zone", fetch(player.currentMapArea))
    write_hints()
})

fun write_hints() {
    set_string("zone_hint", "")
    // TODO have to write the zone integers here, no way to pass the zone type around
    if get_integer("zone") == 0 {
        write_marsh_hint()
    }
    if get_integer("zone") == 1 {
        write_hollow_hint()
    }
    if get_integer("zone") == 2 {
        write_glades_hint()
    }
    if get_integer("zone") == 3 {
        write_wellspring_hint()
    }
    if get_integer("zone") == 7 {
        write_woods_hint()
    }
    if get_integer("zone") == 6 {
        write_reach_hint()
    }
    if get_integer("zone") == 8 {
        write_depths_hint()
    }
    if get_integer("zone") == 4 {
        write_pools_hint()
    }
    if get_integer("zone") == 9 {
        write_wastes_hint()
    }
    if get_integer("zone") == 11 {
        write_willow_hint()
    }
    if get_integer("zone") == 5 {
        write_burrows_hint()
    }
    if get_string("zone_hint") != "" {
        set_string("progress_message", get_string("progress_message") + "\n" + get_string("zone_hint"))
    }
}

fun write_marsh_hint() {
    if MarshSpawn.LupoMap {
        write_marsh_skill_hint()
        write_marsh_teleporter_hint()
    }
}
fun write_hollow_hint() {
    if WestHollow.LupoMap {
        write_hollow_skill_hint()
        write_hollow_teleporter_hint()
    }
}
fun write_glades_hint() {
    if LupoShop.HCMapIcon {
        write_glades_skill_hint()
        write_glades_teleporter_hint()
    }
}
fun write_wellspring_hint() {
    if InnerWellspring.LupoMap {
        write_wellspring_skill_hint()
        write_wellspring_teleporter_hint()
    }
}
fun write_woods_hint() {
    if LupoShop.ECMapIcon {
        write_woods_skill_hint()
        write_woods_teleporter_hint()
    }
}
fun write_reach_hint() {
    if LowerReach.LupoMap {
        write_reach_skill_hint()
        write_reach_teleporter_hint()
    }
}
fun write_depths_hint() {
    if LowerDepths.LupoMap {
        write_depths_skill_hint()
        write_depths_teleporter_hint()
    }
}
fun write_pools_hint() {
    if EastPools.LupoMap {
        write_pools_skill_hint()
        write_pools_teleporter_hint()
    }
}
fun write_wastes_hint() {
    if LowerWastes.LupoMap {
        write_wastes_skill_hint()
        write_wastes_teleporter_hint()
    }
}
fun write_willow_hint() {
    if WillowsEnd.LupoMap {
        write_willow_skill_hint()
        write_willow_teleporter_hint()
    }
}
fun write_burrows_hint() {
    if MidnightBurrows.LupoMap {
        write_burrows_skill_hint()
        write_burrows_teleporter_hint()
    }
}

!let(description, "")

!if skill_hints {
    !let(description, "skills")

    !count_in_zone(
        [
            (skills_in_marsh, Zone::Marsh),
            (skills_in_hollow, Zone::Hollow),
            (skills_in_glades, Zone::Glades),
            (skills_in_wellspring, Zone::Wellspring),
            (skills_in_woods, Zone::Woods),
            (skills_in_reach, Zone::Reach),
            (skills_in_depths, Zone::Depths),
            (skills_in_pools, Zone::Pools),
            (skills_in_wastes, Zone::Wastes),
            (skills_in_willow, Zone::Willow),
            (skills_in_burrows, Zone::Burrows),
        ],
        [
            skill(Skill::Bash),
            skill(Skill::DoubleJump),
            skill(Skill::Launch),
            skill(Skill::Glide),
            skill(Skill::WaterBreath),
            skill(Skill::Grenade),
            skill(Skill::Grapple),
            skill(Skill::Flash),
            skill(Skill::Spear),
            skill(Skill::Regenerate),
            skill(Skill::Bow),
            skill(Skill::Hammer),
            skill(Skill::Sword),
            skill(Skill::Burrow),
            skill(Skill::Dash),
            skill(Skill::WaterDash),
            skill(Skill::Shuriken),
            skill(Skill::Blaze),
            skill(Skill::Sentry),
            skill(Skill::Flap),
            clean_water(),
        ]
    )

    fun write_marsh_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Marsh Skills - " + skills_in_marsh)
    }
    fun write_hollow_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Hollow Skills - " + skills_in_hollow)
    }
    fun write_glades_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Glades Skills - " + skills_in_glades)
    }
    fun write_wellspring_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Wellspring Skills - " + skills_in_wellspring)
    }
    fun write_woods_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Woods Skills - " + skills_in_woods)
    }
    fun write_reach_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Reach Skills - " + skills_in_reach)
    }
    fun write_depths_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Depths Skills - " + skills_in_depths)
    }
    fun write_pools_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Pools Skills - " + skills_in_pools)
    }
    fun write_wastes_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Wastes Skills - " + skills_in_wastes)
    }
    fun write_willow_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Willow Skills - " + skills_in_willow)
    }
    fun write_burrows_skill_hint() {
        set_string("zone_hint", get_string("zone_hint") + "Burrows Skills - " + skills_in_burrows)
    }
}
!if skill_hints == false {
    fun write_marsh_skill_hint() {}
    fun write_hollow_skill_hint() {}
    fun write_glades_skill_hint() {}
    fun write_wellspring_skill_hint() {}
    fun write_woods_skill_hint() {}
    fun write_reach_skill_hint() {}
    fun write_depths_skill_hint() {}
    fun write_pools_skill_hint() {}
    fun write_wastes_skill_hint() {}
    fun write_willow_skill_hint() {}
    fun write_burrows_skill_hint() {}
}

!if teleporter_hints {
    !if skill_hints {
        !let(description, "skills and teleporters")
    }
    !if skill_hints == false {
        !let(description, "teleporters")
    }

    !count_in_zone(
        [
            (teleporters_in_marsh, Zone::Marsh),
            (teleporters_in_hollow, Zone::Hollow),
            (teleporters_in_glades, Zone::Glades),
            (teleporters_in_wellspring, Zone::Wellspring),
            (teleporters_in_woods, Zone::Woods),
            (teleporters_in_reach, Zone::Reach),
            (teleporters_in_depths, Zone::Depths),
            (teleporters_in_pools, Zone::Pools),
            (teleporters_in_wastes, Zone::Wastes),
            (teleporters_in_willow, Zone::Willow),
            (teleporters_in_burrows, Zone::Burrows),
        ],
        [
            teleporter(Teleporter::Marsh),
            teleporter(Teleporter::Den),
            teleporter(Teleporter::Hollow),
            teleporter(Teleporter::Glades),
            teleporter(Teleporter::Wellspring),
            teleporter(Teleporter::Burrows),
            teleporter(Teleporter::WoodsEntrance),
            teleporter(Teleporter::WoodsExit),
            teleporter(Teleporter::Reach),
            teleporter(Teleporter::Depths),
            teleporter(Teleporter::CentralPools),
            teleporter(Teleporter::PoolsBoss),
            teleporter(Teleporter::FeedingGrounds),
            teleporter(Teleporter::CentralWastes),
            teleporter(Teleporter::OuterRuins),
            teleporter(Teleporter::InnerRuins),
            teleporter(Teleporter::Willow),
            teleporter(Teleporter::Shriek),
        ]
    )

    fun write_marsh_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nMarsh TPs - " + teleporters_in_marsh)
    }
    fun write_hollow_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nHollow TPs - " + teleporters_in_hollow)
    }
    fun write_glades_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nGlades TPs - " + teleporters_in_glades)
    }
    fun write_wellspring_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nWellspring TPs - " + teleporters_in_wellspring)
    }
    fun write_woods_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nWoods TPs - " + teleporters_in_woods)
    }
    fun write_reach_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nReach TPs - " + teleporters_in_reach)
    }
    fun write_depths_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nDepths TPs - " + teleporters_in_depths)
    }
    fun write_pools_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nPools TPs - " + teleporters_in_pools)
    }
    fun write_wastes_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nWastes TPs - " + teleporters_in_wastes)
    }
    fun write_willow_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nWillow TPs - " + teleporters_in_willow)
    }
    fun write_burrows_teleporter_hint() {
        set_string("zone_hint", get_string("zone_hint") + "\nBurrows TPs - " + teleporters_in_burrows)
    }
}
!if teleporter_hints == false {
    fun write_marsh_teleporter_hint() {}
    fun write_hollow_teleporter_hint() {}
    fun write_glades_teleporter_hint() {}
    fun write_wellspring_teleporter_hint() {}
    fun write_woods_teleporter_hint() {}
    fun write_reach_teleporter_hint() {}
    fun write_depths_teleporter_hint() {}
    fun write_pools_teleporter_hint() {}
    fun write_wastes_teleporter_hint() {}
    fun write_willow_teleporter_hint() {}
    fun write_burrows_teleporter_hint() {}
}

!if description != "" {
    !let(description, "how many " + description + " there are")
}
!if description == "" {
    !let(description, "nothing")
}

on reload {
    set_shop_item_data(
        lupoShop.hcMapIcons,
        200,
        "Glades Items Hint",
        "Reveals " + description + " in Glades",
        LupoIcon::HealthFragmentsMap,
    )
    set_shop_item_data(
        lupoShop.ecMapIcons,
        200,
        "Woods Items Hint",
        "Reveals " + description + " in Woods",
        LupoIcon::EnergyFragmentsMap,
    )
}

on MarshSpawn.LupoMap {
    set_string("zone_hint", "")
    write_marsh_hint()
    item_message(get_string("zone_hint"))
}
on WestHollow.LupoMap {
    set_string("zone_hint", "")
    write_hollow_hint()
    item_message(get_string("zone_hint"))
}
on LupoShop.HCMapIcon {
    set_string("zone_hint", "")
    write_glades_hint()
    item_message(get_string("zone_hint"))
}
on InnerWellspring.LupoMap {
    set_string("zone_hint", "")
    write_wellspring_hint()
    item_message(get_string("zone_hint"))
}
on LupoShop.ECMapIcon {
    set_string("zone_hint", "")
    write_woods_hint()
    item_message(get_string("zone_hint"))
}
on LowerReach.LupoMap {
    set_string("zone_hint", "")
    write_reach_hint()
    item_message(get_string("zone_hint"))
}
on LowerDepths.LupoMap {
    set_string("zone_hint", "")
    write_depths_hint()
    item_message(get_string("zone_hint"))
}
on EastPools.LupoMap {
    set_string("zone_hint", "")
    write_pools_hint()
    item_message(get_string("zone_hint"))
}
on LowerWastes.LupoMap {
    set_string("zone_hint", "")
    write_wastes_hint()
    item_message(get_string("zone_hint"))
}
on WillowsEnd.LupoMap {
    set_string("zone_hint", "")
    write_willow_hint()
    item_message(get_string("zone_hint"))
}
on MidnightBurrows.LupoMap {
    set_string("zone_hint", "")
    write_burrows_hint()
    item_message(get_string("zone_hint"))
}
