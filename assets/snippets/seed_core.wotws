#hidden
#name("Seed Core")
#description("Essentials for the randomizer to function")

// TODO test
// TODO check over these, for instance why risingPedestals?
// TODO add comments
!export(spawn_states)
on spawn spawn_states()
fun spawn_states() {
    store(randoConfig.inLogicFilterEnabled, true)
    store(randoConfig.fixMeetingKwolokUnderwaterTrigger, true)
    store(randoConfig.fixTeleporterChainOutOfBounds, true)
    store(randoConfig.fixKwolokBossEscapeUnderwaterSpiritLightSoftlock, true)
    store(randoConfig.fixShopAnywhere, true)
    store(randoConfig.usePatch2Kickback, true)
    store(randoConfig.allowTeleportingUnderwater, true)
    store(randoConfig.allowTeleportingDuringCombatShrineFights, true)
    store(randoState.regenTreeDrained, true)
    store(npcsStateGroup.fastTravelEnabledUberState, 1)
    store(gromShop.spiritWellBought, true)
    store(gromShop.beautifyBought, true)
    store(swampStateGroup.torchHolded, true)
    store(kwolokGroupDescriptor.risingPedestals, true)
    store(inkwaterMarshStateGroup.mokiTorchPlayed, true)
    store(swampStateGroup.leverA, true)
    store(_petrifiedForestGroup.narratorLineShown, true)
    store(58674|32369, true) // _petrifiedForestGroup.powlVignettePlayed
    store(58674|14539, true) // _petrifiedForestGroup.powlVignettePlayed
    store(_petrifiedForestGroup.skeletonState, true)
    store(_petrifiedForestGroup.narratorLineShownHowl, true)
    store(_petrifiedForestGroup.featherVignettePlayed, true)
    store(_petrifiedForestGroup.petrifiedOwlStalkSequenceCompleted, true)
    store(questUberStateGroup.winterForestWispQuestUberState, 1)
    store(questUberStateGroup.lagoonWispQuestUberState, 1)
    store(questUberStateGroup.desertWispQuestUberState, 1)
    store(questUberStateGroup.mouldwoodDepthsWispQuestUberState, 1)
    store(_petrifiedForestGroup.petrifiedForestNewTransitionOriVignettePlayed, true)
    store(_petrifiedForestGroup.petrifiedForestNewTransitionKuVignettePlayed, 2)
    store(questUberStateGroup.lastGlobalEvent, 2)
    store(questUberStateGroup.findKuQuest, 4)
    store(questUberStateGroup.lookForKuQuestUberState, 4)
    store(swampStateGroup.interactedWithOpher, true)
}

// TODO fully support random grom shop and remove this
on reload {
    set_shop_item_data(
        gromShop.spiritWellBought,
        1,
        "Repair the Spirit Well",
        "They say the spirit of old could #warp# from one well to another. Perhaps if we #repaired this well with Gorlek Ore#, returning to the #Wellspring Glades# would be even easier.",
        GromIcon::RepairTheSpiritWell,
    )
    set_shop_item_data(
        gromShop.housesABought,
        4,
        "Dwelling Repairs",
        "It's a shame how those old Moki dwellings are in shambles. Maybe if we #fixed them up# the Moki could #move back to the Glades#?",
        GromIcon::DwellingRepairs,
    )
    set_shop_item_data(
        gromShop.housesBBought,
        6,
        "Roofs Over Heads",
        "Time to #build some more housing#! Now on the big tree, by the fire.",
        GromIcon::RoofsOverHeads,
    )
    set_shop_item_data(
        gromShop.housesCBought,
        8,
        "Onwards and Upwards",
        "Treehouses seem to be popular with the Moki. How about we add a couple more?",
        GromIcon::OnwardsAndUpwards,
    )
    set_shop_item_data(
        gromShop.removeThornsBought,
        5,
        "Thorny Situation",
        "Those spikey vines all over the place are quite the nuisance, let me tell you. With some help, I could #clear them out# and #make the Glades safer# for everyone!",
        GromIcon::ThornySituation,
    )
    set_shop_item_data(
        gromShop.openCaveBought,
        6,
        "Clear the Cave Entrance",
        "That old cave entrance looks like it's #about to collapse#...but we Gorlek learned a thing or two about tunnelling after fleeing to the mines. With some Ore, I can #repair# it.",
        GromIcon::ClearTheCaveEntrance,
    )
    set_shop_item_data(
        gromShop.beautifyBought,
        10,
        "The Gorlek Touch",
        "The Moki are right...building it only half the work. Nothing's quite complete without some #finishing touches# of decoration.",
        GromIcon::TheGorlekTouch,
    )
    // TODO Tuley
}

// TODO names are inconsistent with icon names
// TODO try out storing the shop data in the save file
on reload update_houses_b_unlocked()
on change gromShop.housesABought update_houses_b_unlocked()
fun update_houses_b_unlocked() {
    set_shop_item_hidden(gromShop.housesBBought, gromShop.housesABought == false)
}
on reload update_houses_c_unlocked()
on change gromShop.housesBBought update_houses_c_unlocked()
fun update_houses_c_unlocked() {
    set_shop_item_hidden(gromShop.housesCBought, gromShop.housesBBought == false)
}
on reload update_cave_unlocked()
on change gromShop.removeThornsBought update_cave_unlocked()
fun update_cave_unlocked() {
    set_shop_item_hidden(gromShop.openCaveBought, gromShop.removeThornsBought == false)
}

on gromShop.spiritWellBought store(gladesProjects.spiritWellBuilt, true)
on gromShop.housesABought store(gladesProjects.housesABuilt, true)
on gromShop.housesBBought store(gladesProjects.housesBBuilt, true)
on gromShop.housesCBought store(gladesProjects.housesCBuilt, true)
on gromShop.removeThornsBought store(gladesProjects.removeThornsBuilt, true)
on gromShop.openCaveBought store(gladesProjects.openCaveBuilt, true)
on gromShop.beautifyBought store(gladesProjects.beautifyBuilt, true)

on HowlsDen.SwordTree store(randoState.rainLiftedInInkwater, true) // TODO rename Inkwater -> Marsh
on EastPools.FightArenas store(lumaPoolsStateGroup.arenaByteStateSerialized, 4)
on hubUberStateGroup.craftCutsceneState == 1 || hubUberStateGroup.craftCutsceneState == 2 {
    store(hubUberStateGroup.craftCutsceneState, 3)
    store(GladesTown.TwillenGemQuest, true)
}
on InnerWellspring.WaterEscape store(kwolokGroupDescriptor.cleanseWellspringQuestUberState, 3)
on kwolokGroupDescriptor.cleanseWellspringQuestUberState >= 3 store(GladesTown.TuleySpawned, true)
on _petrifiedForestGroup.chaseState == 7 store(_petrifiedForestGroup.chaseState, 8)
on WillowsEnd.MinibossHeart store(willowsEndGroup.laserShooterBossState, 4)

on questUberStateGroup.familyReunionQuest == 2 if WoodsEntry.DollQI store(questUberStateGroup.familyReunionQuest, 3)
on questUberStateGroup.familyReunionQuest > 2 if randoState.canOpenMokiFatherHut == false {
    if gladesProjects.housesABuilt == false store(questUberStateGroup.familyReunionQuest, 0)
    if gladesProjects.housesABuilt store(questUberStateGroup.familyReunionQuest, 1)
}
